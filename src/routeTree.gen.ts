/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchlistRouteImport } from './routes/watchlist'
import { Route as RecentRouteImport } from './routes/recent'
import { Route as CategoryRouteImport } from './routes/category'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlayIdRouteImport } from './routes/play.$id'
import { Route as DetailsIdRouteImport } from './routes/details.$id'

const WatchlistRoute = WatchlistRouteImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => rootRouteImport,
} as any)
const RecentRoute = RecentRouteImport.update({
  id: '/recent',
  path: '/recent',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoryRoute = CategoryRouteImport.update({
  id: '/category',
  path: '/category',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayIdRoute = PlayIdRouteImport.update({
  id: '/play/$id',
  path: '/play/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DetailsIdRoute = DetailsIdRouteImport.update({
  id: '/details/$id',
  path: '/details/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/recent': typeof RecentRoute
  '/watchlist': typeof WatchlistRoute
  '/details/$id': typeof DetailsIdRoute
  '/play/$id': typeof PlayIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/recent': typeof RecentRoute
  '/watchlist': typeof WatchlistRoute
  '/details/$id': typeof DetailsIdRoute
  '/play/$id': typeof PlayIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/recent': typeof RecentRoute
  '/watchlist': typeof WatchlistRoute
  '/details/$id': typeof DetailsIdRoute
  '/play/$id': typeof PlayIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/category'
    | '/recent'
    | '/watchlist'
    | '/details/$id'
    | '/play/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/category'
    | '/recent'
    | '/watchlist'
    | '/details/$id'
    | '/play/$id'
  id:
    | '__root__'
    | '/'
    | '/category'
    | '/recent'
    | '/watchlist'
    | '/details/$id'
    | '/play/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategoryRoute: typeof CategoryRoute
  RecentRoute: typeof RecentRoute
  WatchlistRoute: typeof WatchlistRoute
  DetailsIdRoute: typeof DetailsIdRoute
  PlayIdRoute: typeof PlayIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recent': {
      id: '/recent'
      path: '/recent'
      fullPath: '/recent'
      preLoaderRoute: typeof RecentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/category': {
      id: '/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof CategoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/$id': {
      id: '/play/$id'
      path: '/play/$id'
      fullPath: '/play/$id'
      preLoaderRoute: typeof PlayIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/details/$id': {
      id: '/details/$id'
      path: '/details/$id'
      fullPath: '/details/$id'
      preLoaderRoute: typeof DetailsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategoryRoute: CategoryRoute,
  RecentRoute: RecentRoute,
  WatchlistRoute: WatchlistRoute,
  DetailsIdRoute: DetailsIdRoute,
  PlayIdRoute: PlayIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
